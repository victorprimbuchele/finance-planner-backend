generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int             @id @default(autoincrement())
  password      String
  email         String          @unique
  age           String
  apiKey        String
  gender        String
  name          String
  isAuth        Boolean
  Category      Category[]
  PaymentMethod PaymentMethod[]
  Transfers     Transfers[]
}

model BlackList {
  id    Int    @id @default(autoincrement())
  token String
}

model Category {
  id          Int           @id @default(autoincrement())
  name        String
  userId      Int
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  SubCategory SubCategory[]
}

model PaymentMethod {
  id                                Int                                 @id @default(autoincrement())
  name                              String
  userId                            Int
  user                              User                                @relation(fields: [userId], references: [id], onDelete: Cascade)
  TransfersSubCategoryPaymentMethod TransfersSubCategoryPaymentMethod[]
}

model SubCategory {
  id                   Int                    @id @default(autoincrement())
  name                 String                 @unique
  categoryId           Int
  category             Category               @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  TransfersSubCategory TransfersSubCategory[]
}

model Transfers {
  id                   Int                    @id @default(autoincrement())
  amount               Int
  date                 DateTime
  description          String?
  userId               Int
  user                 User                   @relation(fields: [userId], references: [id], onDelete: Cascade)
  TransfersSubCategory TransfersSubCategory[]
}

model TransfersSubCategory {
  id                                Int                                 @id @default(autoincrement())
  transfersId                       Int
  subCategoryId                     Int
  subCategory                       SubCategory                         @relation(fields: [subCategoryId], references: [id])
  transfers                         Transfers                           @relation(fields: [transfersId], references: [id], onDelete: Cascade)
  TransfersSubCategoryPaymentMethod TransfersSubCategoryPaymentMethod[]
}

model TransfersSubCategoryPaymentMethod {
  id                     Int                  @id @default(autoincrement())
  transfersSubCategoryId Int
  paymentMethodId        Int
  paymentMethod          PaymentMethod        @relation(fields: [paymentMethodId], references: [id])
  transfersSubCategory   TransfersSubCategory @relation(fields: [transfersSubCategoryId], references: [id], onDelete: Cascade)
}
